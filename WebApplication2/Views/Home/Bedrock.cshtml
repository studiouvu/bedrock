@using Bedrock.Views
<div class="text-left" style="width: 100%;">
    <div class="hide-on-small">
        <div id="floating"
             style="
                 position: fixed;
                 left : 14px;
                 top: 0px;
                 width: 230px;
                 height: 100%;
                 float: left;
                 flex-direction: column;
                  display: flex;
                  margin-left: auto; 
                  margin-right: auto; ">
            <div style="margin-top: 20px;">
                <img
                    onclick="PageReload()"
                    class="click-animate unselectable"
                    src="~/images/AppIconTrans.png"
                    style="cursor: pointer; height:22px; margin-left: 5px;">
            </div>
            <div style="min-height: 25px;"></div>
            <div
                class="click-color unselectable"
                onclick="GetGPT()"
                style="width: 100%; margin-bottom: 5px; height: 32px; cursor: pointer; border-radius: 10px; padding: 4px 8px;">
                ⛳Home
            </div>
            <div style='min-height:1px; width:100%; background-color:#1f1f1f;'></div>
            <div id="project-list" class="scroll-vertical" style="overscroll-behavior: contain; margin-top: 20px; flex: none; overflow-y: auto; max-height: 650px; white-space: nowrap; width: 100%;">
                <div
                    style="cursor: pointer; margin: 0px; background-color: #1f1f1f; border-radius: 10px; padding: 4px 8px;">
                    -
                </div>
            </div>
            <div
                onclick="CreateNewProject()"
                class="click-color unselectable"
                style="float:left; cursor: pointer; width: 128px; margin-top: 10px; background-color: #1f1f1f; border-radius: 10px; padding: 4px 8px;">
                <div class="text-center">+</div>
            </div>
            <p id="user-id" style="font-size: 12px; margin-top: auto;  color:#919191;"></p>
        </div>
    </div>
    <div class="container" style="padding-top: 5px; margin-bottom: 200px; min-height: 600px; ">
        <div
            style="width: 100%; max-width: 600px; margin-left: auto; margin-right: auto; border-radius: 10px;">
            <font color="#919191">
                <div style="position: fixed; top: 0px; width: 100%; max-width: 600px; z-index: 1; background-color: #0f0f0f; border: none; outline: none; padding-bottom: 5px; padding-top: 34px; display: flex; margin-bottom: 15px">
                    <div class="hide-on-small"
                         style="width: 28px; height: 100%; padding: 6px; border-radius: 10px; margin-right: 6px;">
                        <div class="text-center">
                            🎏
                        </div>
                    </div>
                    <div class="display-on-small click-color unselectable"
                         onclick="CreateNewProject()"
                         style="cursor: pointer; background-color: #1f1f1f; min-width: 34px; height: 100%; padding: 6px; border-radius: 10px; margin-right: 6px;">
                        <div class="text-center">
                            <b>+</b>
                        </div>
                    </div>
                    <div
                        id="last-projects"
                        class="scroll-hoizontal"
                        style="height: 100%; border: none; outline: none; display: flex; overflow: scroll;  white-space: nowrap;">
                        <div
                            style="cursor: pointer; height: 100%; background-color: #1f1f1f; padding: 6px 9px; border-radius: 10px; margin-right: 6px;">
                            <div class="text-center">
                                --
                            </div>
                        </div>
                    </div>
                </div>
            </font>

            <div style="width: 100%; height: 100%; margin-top: 65px;">
                <div id="project-name-holder" style="display: flex; border: none; outline: none;">
                    <div style="display: flex; align-items: center">
                        @* <div *@
                        @*     class="click-animate unselectable" *@
                        @*     style="cursor: pointer; width: 22px; height: 22px; border: solid #cdd0d4;  border-width:1px; margin-bottom: 4px; margin-right: 8px; border-radius: 5px;"> *@
                        @* </div> *@
                        <input
                            id="project-name"
                            class="title-input input-box"
                            type="text"
                            style="height:100%"
                            placeholder=""
                            value="-"
                            onfocusout="InputProjectName()"
                            onkeyup="InputProjectName()"/>
                    </div>
                </div>
                <div style="border: none; outline: none; padding-bottom: 4px; display: flex;">
                    <div
                        onclick="ShowDoneTask()"
                        class="click-color unselectable"
                        style="cursor: pointer; height: 100%; border-radius: 10px; padding: 4px;">
                        <div
                            class="text-center">
                            <font color="#919191" style="display: flex;">
                                ✔️
                                <div id="task-count">
                                    -/-
                                </div>
                            </font>
                        </div>
                    </div>
                </div>
                <div
                    style="max-width: 100%; margin-left: auto; margin-right: auto; border-radius: 10px;">
                    <div id="tblContent" style="max-width: 100%;  overflow-wrap: break-word;">
                    </div>
                    <div style="min-height: 4px;">
                    </div>
                    <div class="input-hide">
                        <div style="max-width: 100%; min-height: 42px; display: flex; align-items: center;">
                            <div id="input-tab" style="height: 100%;"></div>
                            <div
                                class="click-animate unselectable"
                                style="cursor: pointer; min-width: 18px; min-height: 18px; border: solid #cdd0d4;  border-width:1px; margin-right: 4px; border-radius: 5px;">
                            </div>
                            <div class="input-box-holder" style="display: flex; align-items: center; width: 100%; background: #1b1c1c; overflow-wrap: break-word;">
                                <div style="width: 100%; height: 100%; margin-left: 5px; margin-right: 5px;">
                                    <input class="input-box" id="input1" type="text" placeholder="> ..." onKeyDown="SendInput(event)"/>
                                </div>
                            </div>
                            <div
                                class="click-color unselectable input-box-holder"
                                onclick="SendInputForce()"
                                style="cursor: pointer; min-width: 42px; min-height: 42px; display: flex; align-items: center; background: #1b1c1c;
                             padding: 5px; margin-left: 5px; ">
                                <div class="text-center" style="width: 100%; align-items: center;">
                                    →
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if (ViewBag.Login == false)
            {
                <span id="login-holder">
                    <div style="max-width: 400px; margin-top: 80px; margin-left: auto; margin-right: auto; background-color: #044a80; padding: 15px;border-radius: 10px;">
                        <div class="text-center" style="width: 100%; align-items: center;">
                            <div id="login-form">
                                <h7>
                                    로그인하여 데이터를 안전하게 보관하세요
                                </h7>
                                <div style="max-width: 100%; margin-top: 10px; display: flex; align-items: center;">
                                    <div class="input-box-holder" style="width: 100%; background: #092c47; overflow-wrap: break-word;">
                                        <div style="width: 100%; height: 100%; margin-left: 10px; margin-right: 10px;">
                                            <input id="mail-input" class="input-box" type="text" placeholder="your-email@@email.com" onKeyDown="SendEmail(event)"/>
                                        </div>
                                    </div>
                                    <div
                                        class="click-color unselectable input-box-holder"
                                        onclick="SendEmailForce()"
                                        style="background: #092c47; cursor: pointer; min-width: 42px; min-height: 42px; display: flex; align-items: center;
                                    padding: 5px; margin-left: 5px; ">
                                        <div class="text-center" style="width: 100%; align-items: center;">
                                            →
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </span>
            }
        </div>
    </div>

    <div
        class="click-color unselectable input-hide"
        onclick="CurrentProjectArchive()"
        style="cursor: pointer; background-color: #1f1f1f; max-width: 140px; margin-top: 400px; margin-left: auto; margin-right: auto; padding: 5px; border-radius: 10px;">
        <div class="text-center" style="width: 100%; align-items: center;">
            <font color="#919191">
                Project archive
            </font>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        var deviceId = "@ViewBag.DeviceId";
        var emailId = "";
        var depth = 0;
        var isShift = false;
        
    $(function () {
        /*document.addEventListener('keydown', function (event) {
            var key = event.key || event.keyCode;

            if (key == 'Enter') {
            }
            return false;
        });*/

        document.getElementById("input1").addEventListener("keyup", function(event) {
            if (event.key === "Shift") {
                isShift = false;
            }
        });

        document.getElementById("input1").addEventListener("keydown", function(event) {
            if (event.key === "Shift") {
                event.preventDefault();
                isShift = true;
            }
            
            if (event.key === "Tab") {
                event.preventDefault();
                
                if (isShift) {
                    depth -= 1;
                    
                    if (depth < 0)
                        depth = 0;

                    var s = "";
                    for (var i = 0; i < depth; i++) {
                        s += "&nbsp;&nbsp;&nbsp;&nbsp;";
                    }

                    $('#input-tab').html(s);
                }
                else
                {
                    depth += 1;
                    $('#input-tab').append("&nbsp;&nbsp;&nbsp;&nbsp;");
                }
            }
        });

        ReceiveDeviceId();
        
        /*const myDivs = document.querySelectorAll('.click-animate');

        myDivs.forEach((div) => {
            div.addEventListener('click', () => {
                div.classList.toggle('animate');
            });
        });*/
    });

    function ReceiveDeviceId() {
        fetch('@Url.Action("ReceiveDeviceId")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ deviceId: deviceId })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('fail to load user id');
            }
            return response.text();
        })
        .then(data => {
            deviceId = data;
            ReceiveFullContent();
            ReceiveUserId();
            GetTaskCount();
        })
        .catch(error => {
           
        });
    }

    function ReceiveFullContent() {
        const elements = document.querySelectorAll('.input-hide');
        elements.forEach(element => {
            element.style.display = 'block';
        });
        
        ReceiveContent();
        GetTaskCount();
        ReceiveProjectName();
        GetLastProjects();
        GetProjectList();
    }

    function ReceiveContent() {
        fetch('@Url.Action("ReceiveFullContent")', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body:
                JSON.stringify({
                    DeviceId: deviceId,
                })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('fail to load user id');
                }
                return response.text();
            })
            .then(data => {
                $('#tblContent').html(data);
            })
            .catch(error => {
                $('#tblContent').html("fail");
            });
    }

    function ReceiveUserId() {
        fetch('@Url.Action("ReceiveUserId")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body:
                JSON.stringify({
                    DeviceId: deviceId,
                })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('fail to load user id');
            }
            return response.text();
        })
        .then(data => {
            $('#user-id').html(data);
        })
        .catch(error => {
            $('#user-id').html("fail to load user id");
        });
    }

    function ReceiveProjectName() {
        fetch('@Url.Action("ReceiveCurrentProjectName")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body:
                JSON.stringify({
                    DeviceId: deviceId,
                })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('fail to load user id');
                }
                return response.text();
            })
            .then(data => {
                document.getElementById('project-name').value = data;
                document.title = data + " - Bedrock";
            })
            .catch(error => {
                $('#project-name').html("fail");
            });
    }

    function ClickDone(id , destroy) {
        const element = document.getElementById(id);
        element.classList.add('fade-out'); // 투명해지도록 클래스 추가

        if (destroy == 'true')
        {
            setTimeout(() => {
                element.remove();
            }, 500); // 1000ms = 1초
        }
    
        fetch('@Url.Action("ClickDone")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ data: id })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('네트워크 응답에 문제가 있습니다.');
            }
            return response.text();
        })
        .then(data => {
            GetTaskCount();
            if (destroy == 'false')
            {
                setTimeout(() => {
                    ReceiveFullContent();
                }, 500); // 1000ms = 1초
            }
        })
        .catch(error => {
            $('#tblContent').html("fail");
        });
    }

    function ClickRecover(id) {
        fetch('@Url.Action("ClickDone")', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ data: id })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            })
            .then(data => {
                ReceiveFullContent();
            })
            .catch(error => {
                $('#tblContent').html("fail");
            });
    }

    function SendInputForce() {
        let typped = document.getElementById('input1').value;
        document.getElementById('input1').value = '';

        if (typped == "")
        {
            depth = 0;
            $('#input-tab').html("");
            return;
        }

        fetch('@Url.Action("ReceiveText")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({
            depth: depth,
            deviceId: deviceId,
             data: typped })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            })
            .then(data => {
                $('#tblContent').append(data);
                GetTaskCount();
            })
            .catch(error => {
                $('#tblContent').html("fail");
            });
    }

    function SendInput(event) {
        var key = event.key || event.keyCode;

        if(key != 'Enter')
            return;

        SendInputForce();
    }

    function SendEmail(event) {
        var key = event.key || event.keyCode;

        if(key != 'Enter')
            return;

        SendEmailForce();
    }

    function SendEmailForce() {
        let typped = document.getElementById('mail-input').value;
        $('#login-form').html("<h5>Sending...</h5>");

        fetch('@Url.Action("ReceiveEmailId")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ data: typped })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            })
            .then(data => {
                emailId = typped;
                $('#login-form').html(data);
            })
            .catch(error => {
                $('#tblContent').html("fail");
            });
    }

    function SendCode(event) {
        var key = event.key || event.keyCode;

        if(key != 'Enter')
            return;

        SendCodeForce();
    }

    function SendCodeForce() {
        let typped = document.getElementById('code-input').value;
        $('#login-form').html("<h5>Sending...</h5>");

        fetch('@Url.Action("ReceiveEmailCode")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ 
                deviceId: deviceId,
                content: emailId,
                data: typped })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            })
            .then(data => {
                ReceiveFullContent();
                ReceiveUserId();
                scrollToTop();
                $('#login-holder').html("");
            })
            .catch(error => {
                $('#tblContent').html("fail");
            });
    }

    function InputProjectName() {
        let typped = document.getElementById('project-name').value;
        SendProjectName(typped);
    }

    function SendProjectName(name) {
        fetch('@Url.Action("ReceiveSendProjectName")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({
            deviceId: deviceId,
             data: name })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            })
            .then(data => {
                GetProjectList();
                GetLastProjects();
            })
            .catch(error => {
            });
    }

    function ShowDate() {
        fetch('@Url.Action("ReceiveShowDate")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ deviceId: deviceId })
        })
        .then(data => {
            ReceiveFullContent();
        })
        .catch(error => {
            $('#tblContent').html("fail");
        });
    }

    function ShowDoneTask() {
        fetch('@Url.Action("ReceiveShowDoneTask")', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ deviceId: deviceId })
        })
            .then(data => {
                ReceiveFullContent();
            })
            .catch(error => {
                $('#tblContent').html("fail");
            });
    }

    function GetTaskCount() {
        fetch('@Url.Action("ReceiveTaskCount")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body:
                JSON.stringify({
                    DeviceId: deviceId,
                })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('네트워크 응답에 문제가 있습니다.');
            }
            return response.text();
        }).then(data => {
                $('#task-count').html(data);
            })
            .catch(error => {
                $('#tblContent').html("fail");
        });
    }

    function GetLastProjects() {
        fetch('@Url.Action("ReceiveLastProjectList")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body:
                JSON.stringify({
                    DeviceId: deviceId,
                })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            }).then(data => {
            $('#last-projects').html(data);
        })
            .catch(error => {
                $('#last-projects').html("fail");
            });
    }

    function GetProjectList() {
        fetch('@Url.Action("ReceiveProjectList")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body:
                JSON.stringify({
                    DeviceId: deviceId,
                })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            }).then(data => {
            $('#project-list').html(data);
        })
            .catch(error => {
                $('#project-list').html("fail");
            });
    }

    function CreateNewProject() {
        fetch('@Url.Action("ReceiveCreateProject")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ deviceId: deviceId})
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('네트워크 응답에 문제가 있습니다.');
            }
            return response.text();
        })
        .then(data => {
            ReceiveFullContent();
        })
            .catch(error => {
                $('#last-projects').html("fail");
            });
    }

    function ChangeProject(projectId , projectName) {
        $('#tblContent').html("<div class='fade-in' style='opacity: 0; min-height: 100px; border-radius: 15px; background-color: #1b1c1c'></div>");
        document.getElementById('project-name').value = projectName;
        depth = 0;
        $('#input-tab').html("");
        scrollToTop();
        
        fetch('@Url.Action("ReceiveChangeProject")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({ 
            deviceId: deviceId,
            data: projectId })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            })
            .then(data => {
                ReceiveFullContent();
            })
            .catch(error => {
                $('#last-projects').html("fail");
            });
    }

    function CurrentProjectArchive(projectId) {
        scrollToTop();

        fetch('@Url.Action("ReceiveCurrentProjectArchive")', {
            method: 'POST',
            credentials: 'include', 
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({
            deviceId: deviceId,
             data: projectId })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 응답에 문제가 있습니다.');
                }
                return response.text();
            })
            .then(data => {
                ReceiveFullContent();
            })
            .catch(error => {
                $('#last-projects').html("fail");
            });
    }

    function GetGPT() {
        scrollToTop();

        const elements = document.querySelectorAll('.input-hide');
        elements.forEach(element => {
            element.style.display = 'none';
        });
        
        $('#tblContent').html("<div class='fade-in-long' style='opacity: 0; min-height: 300px; border-radius: 15px; background-color: #1b1c1c'></div>");
        $('#task-count').html("30분마다 자동으로 업데이트됩니다.");
        
        document.getElementById('project-name').value = "⛳Home";
        depth = 0;
        document.title = "⛳Home - Bedrock";
        
        $('#input-tab').html("");
    
        fetch('@Url.Action("ReceiveGptContent")', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify({
                deviceId: deviceId})
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('네트워크 응답에 문제가 있습니다.');
            }
            return response.text();
        })
        .then(data => {
            $('#tblContent').html(data);
            GetLastProjects();
            GetProjectList();
        })
        .catch(error => {
            $('#last-projects').html("fail");
        });
    }

    function PageReload() {
        location.reload(true);
    }

    function scrollToTop() {
        window.scrollTo({
            top: 0,
            behavior: 'smooth' // 부드럽게 스크롤 이동
        });
    }

    </script>
}